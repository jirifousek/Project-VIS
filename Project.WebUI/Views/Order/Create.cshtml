@model Project.WebUI.Models.OrderModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create Order</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BusinessPartner.Id" class="control-label"></label>
                <select asp-for="BusinessPartner.Id" class="form-control" asp-items="ViewBag.BusinessPartners"></select>
                <span asp-validation-for="BusinessPartner.Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ExpectedDeliveryDate" class="control-label"></label>
                <input asp-for="ExpectedDeliveryDate" class="form-control" />
                <span asp-validation-for="ExpectedDeliveryDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TotalPrice" class="control-label" hidden></label>
                <input asp-for="TotalPrice" class="form-control" hidden />
                <span asp-validation-for="TotalPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Status" class="control-label" hidden></label>
                <input asp-for="Status" class="form-control" value="NEW" hidden />
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <!-- Table for OrderItemModels -->
            <div class="form-group">
                <h4>Order Items</h4>
                <table class="table" id="orderItemsTable">
                    <thead>
                        <tr>
                            <th>Material</th>
                            <th>Quantity</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>
                                <select name="OrderItems[0].MaterialId" class="form-control">
                                    @foreach (var material in (SelectList)ViewBag.Materials)
                                    {
                                        <option value="@material.Value">@material.Text</option>
                                    }
                                </select>
                            </td>
                            <td>
                                <input type="number" name="OrderItems[0].Quantity" class="form-control" />
                            </td>
                            <td>
                                <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <button type="button" class="btn btn-secondary" onclick="addRow()">Add Item</button>
            </div>
            <input type="number" name="itemCount" value="1" hidden />
            <br />
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        let rowIndex = 1;
        const materialsOptions = @Html.Raw(Json.Serialize(ViewBag.Materials));

        function addRow() {
            const table = document.getElementById("orderItemsTable").getElementsByTagName('tbody')[0];
            const newRow = table.insertRow();
            newRow.innerHTML = `
                        <td>
                            <select name="OrderItems[${rowIndex}].MaterialId" class="form-control">
                                ${materialsOptions.map(material => `<option value="${material.value}">${material.text}</option>`).join('')}
                            </select>
                        </td>
                        <td>
                            <input type="number" name="OrderItems[${rowIndex}].Quantity" class="form-control" />
                        </td>
                        <td>
                            <button type="button" class="btn btn-danger" onclick="removeRow(this)">Remove</button>
                        </td>
                    `;
            rowIndex++;
            let itemCount = document.getElementsByName("itemCount")[0];
            itemCount.value = rowIndex;
        }

        function removeRow(button) {
            const row = button.parentNode.parentNode;
            row.parentNode.removeChild(row);
        }
    </script>
}
